---
title: "Influenza A H7N9 in China, 2013"
format: dashboard
theme: lux
---

```{r echo = F, message = F}
# Load packages 
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, outbreaks, bslib, bsicons, shiny, 
               rgeoboundaries, plotly, htmltools, reactable, rnaturalearth,countrycode)

out_13 <- outbreaks::fluH7N9_china_2013

```

```{r}
total_cases <-  out_13 %>% 
  filter(!is.na(case_id)) %>%
  summarise(total = n()) %>% 
  pull(total)
  

total_hospitalisations <- out_13 %>% 
  filter(!is.na(date_of_hospitalisation)) %>%
  summarise(total = n()) %>% 
  pull(total)
  
total_deaths <- out_13 %>% 
  filter(!is.na(outcome)) %>%
  filter(outcome == "Death") %>% 
  summarise(total = n()) %>% 
  pull(total)

```


```{r results='hide', message=FALSE, warning = FALSE}
province_summary <- fluH7N9_china_2013 %>% 
  group_by(province) %>% 
  summarise(total_cases = n()) 

china_map <- rgeoboundaries::gb_adm1("china")

# Check the keys to see if join will be successful
setdiff(province_summary$province, china_map$shapeName)
setdiff(china_map$shapeName, province_summary$province)
# Some work to be done to harmonize these

china_map <- china_map %>%
  # Remove the strings Province, Municipality and Autonomous Region 
  # to allow matching
  mutate(province = str_trim(
    str_remove(shapeName, "Province|Municipality|Autonomous Region")
  ))

# Check if join will work fine
setdiff(province_summary$province, china_map$province)

# Fix Guangdong, which based on a quick Google is actually Guangzhou
china_map <- china_map %>% 
  mutate(province = if_else(province == "Guangzhou", "Guangdong", province)) 
  
# Check again
setdiff(province_summary$province, china_map$province)

# Now join
china_map_joined <- 
  left_join(china_map, province_summary, by = "province") %>% 
  # Create tooltip label 
  mutate(tooltip_label = paste0(province, ": ", total_cases))

china_map_plot <- ggplot(china_map_joined) +
  geom_sf(aes(fill = total_cases, text = tooltip_label)) + 
  theme_void() +
  labs(fill = "Number of Cases") + 
  theme(legend.position = "none")
  

```

```{r}
plot_cases <- province_summary %>% ggplot(mapping = aes(y= reorder(province, total_cases), x= total_cases))+
  geom_bar(stat ="identity", fill = "lightblue")+
  theme_minimal()+
  labs( x = "Total Cases", 
       y = "Province")

plot_cases_plotly <- ggplotly(plot_cases)
```

# HOME 

## Row 1 {height=30%}

```{r}
value_box(
  title = "Total Cases",
  value = total_cases,
  showcase = bsicons::bs_icon("virus"),
  theme = value_box_theme(bg = "#518fd6"),
)
```

```{r}
value_box(
  title = "Total hospitalisations",
  value = total_hospitalisations,
  showcase = bsicons::bs_icon("hospital"),
  theme = value_box_theme(bg = "#214773"),
  
)
```

```{r}
value_box(
  title = "Total Deaths",
  value = total_deaths,
  showcase = bsicons::bs_icon("file-medical"),
  theme = value_box_theme(bg = "#3f71ab"),
  
)
```


## Row 2 {height=70%}

### {width=40%}
```{r title = "Number of Cases by Province"}
plot_cases_plotly

```
### {width=60%}
```{r title= "Map of Provinces by Number of Cases"}

ggplotly(china_map_plot, tooltip = "text")

```



# DOWNLOAD DATA

```{r message=FALSE}

htmltools::browsable(
  tagList(
    reactable(fluH7N9_china_2013, 
              elementId = "fluH7N9_china_2013-table", 
              searchable = T, 
              filterable = T), 
    
tags$button("Download as CSV", 
            onclick = "Reactable.downloadDataCSV('fluH7N9_china_2013-table')")
  )
)
```